---
- name: Install containerd
  ansible.builtin.apt:
    name:
      - containerd
    state: present
    update_cache: yes

- name: Create containerd config directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Configure containerd
  ansible.builtin.template:
    src: config.toml.j2
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: '0644'
  notify:
    - Restart containerd

- name: Restart containerd to apply cgroup driver
  ansible.builtin.systemd:
    name: containerd
    state: restarted
    daemon_reload: yes

- name: Create crictl config directory
  ansible.builtin.file:
    path: /etc/
    state: directory
    mode: '0755'

- name: Configure crictl
  ansible.builtin.copy:
    dest: /etc/crictl.yaml
    content: |
      runtime-endpoint: unix:///run/containerd/containerd.sock
    mode: '0644'
    owner: root
    group: root

- name: Create containerd group if it doesn't exist
  ansible.builtin.group:
    name: containerd
    state: present

- name: Add user to containerd group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: containerd
    append: yes

- name: Set containerd socket permissions
  ansible.builtin.file:
    path: /run/containerd/containerd.sock
    mode: '0660'
    group: containerd

- name: Get containerd group GID
  ansible.builtin.command: getent group containerd
  register: containerd_group_info

- name: Set containerd_group_gid fact
  set_fact:
    containerd_group_gid: "{{ containerd_group_info.stdout.split(':')[2] }}"

- name: Deploy containerd config.toml
  ansible.builtin.template:
    src: config.toml.j2
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: '0644'
  notify:
    - Restart containerd

- name: Download CNI plugins
  ansible.builtin.get_url:
    url: https://github.com/containernetworking/plugins/releases/download/v1.6.1/cni-plugins-linux-amd64-v1.6.1.tgz
    dest: /tmp/cni-plugins.tgz
    mode: '0644'

- name: Extract CNI plugins
  ansible.builtin.unarchive:
    src: /tmp/cni-plugins.tgz
    dest: /opt/cni/bin/
    remote_src: yes
    mode: '0755'

- name: Create CNI directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  loop:
    - /etc/cni/net.d
    - /opt/cni/bin

- name: Configure default CNI loopback network
  ansible.builtin.copy:
    dest: /etc/cni/net.d/99-loopback.conflist
    content: |
      {
        "cniVersion": "0.4.0",
        "name": "loopback",
        "plugins": [
          {
            "type": "loopback"
          }
        ]
      }
    mode: '0644'
    owner: root
    group: root
  notify:
    - Restart containerd