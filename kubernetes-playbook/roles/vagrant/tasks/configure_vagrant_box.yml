---
- name: Check if the custom box already exists
  ansible.builtin.command: vagrant box list
  register: vagrant_box_list
  changed_when: false

- name: Configure Vagrant box
  when: vagrant_custom_box_name not in vagrant_box_list.stdout
  block:
    - name: Ensure Vagrant temporary directory exists
      ansible.builtin.file:
        path: "{{ vagrant_temp_path }}"
        state: directory
        mode: '0755'

    - name: Create temporary Vagrantfile for box update
      ansible.builtin.template:
        src: UpdateVagrantfile.j2
        dest: "{{ vagrant_temp_path }}/Vagrantfile"
        mode: '0644'

    - name: Bring up the Vagrant box for updates
      ansible.builtin.command: vagrant up
      args:
        chdir: "{{ vagrant_temp_path }}"

    - name: Update and clean the Vagrant box
      block:
        - name: Update package cache
          ansible.builtin.command: vagrant ssh -c "sudo apt-get update"
          args:
            chdir: "{{ vagrant_temp_path }}"
          changed_when: false

        - name: Upgrade packages
          ansible.builtin.command: vagrant ssh -c "sudo apt-get upgrade -y"
          args:
            chdir: "{{ vagrant_temp_path }}"
          register: upgrade_result
          changed_when: upgrade_result.stdout is search('upgraded')

        - name: Perform dist-upgrade
          ansible.builtin.command: vagrant ssh -c "sudo apt-get dist-upgrade -y"
          args:
            chdir: "{{ vagrant_temp_path }}"
          register: dist_upgrade_result
          changed_when: dist_upgrade_result.stdout is search('upgraded')

        - name: Remove unnecessary packages
          ansible.builtin.command: vagrant ssh -c "sudo apt-get autoremove -y"
          args:
            chdir: "{{ vagrant_temp_path }}"
          register: autoremove_result
          changed_when: autoremove_result.stdout is search('removed')

        - name: Clean package cache
          ansible.builtin.command: vagrant ssh -c "sudo apt-get clean"
          args:
            chdir: "{{ vagrant_temp_path }}"
          changed_when: false

    - name: Package the updated box
      ansible.builtin.command: vagrant package --output {{ vagrant_custom_box_name }}.box
      args:
        chdir: "{{ vagrant_temp_path }}"
      register: package_result
      changed_when: package_result.rc == 0

    - name: Add the custom box to Vagrant
      ansible.builtin.command: vagrant box add {{ vagrant_custom_box_name }} {{ vagrant_temp_path }}/{{ vagrant_custom_box_name }}.box
      args:
        chdir: "{{ vagrant_temp_path }}"
      register: box_add_result
      changed_when: box_add_result.rc == 0

    - name: Destroy the temporary Vagrant machine
      ansible.builtin.command: vagrant destroy -f
      args:
        chdir: "{{ vagrant_temp_path }}"

    - name: Remove the temporary Vagrantfile
      ansible.builtin.file:
        path: "{{ vagrant_temp_path }}/Vagrantfile"
        state: absent
