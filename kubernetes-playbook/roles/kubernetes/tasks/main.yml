- name: Update apt repository
  ansible.builtin.apt:
    update_cache: yes

- name: Install prerequisites
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gpg
    state: present

- name: Create /etc/apt/keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Kubernetes GPG key
  ansible.builtin.shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes repository
  ansible.builtin.apt_repository:
    repo: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /'
    filename: kubernetes
    state: present

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install Kubernetes packages
  ansible.builtin.apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present

- name: Check if Kubernetes packages are on hold
  ansible.builtin.command: apt-mark showhold
  register: hold_packages

- name: Hold Kubernetes packages
  ansible.builtin.command: apt-mark hold kubelet kubeadm kubectl
  when: >
    "'kubelet' not in hold_packages.stdout or
     'kubeadm' not in hold_packages.stdout or
     'kubectl' not in hold_packages.stdout"

- name: Enable and start kubelet
  ansible.builtin.service:
    name: kubelet
    enabled: yes
    state: started

- name: Pre-pull Kubernetes images
  ansible.builtin.command: kubeadm config images pull --kubernetes-version v1.31.3
  become: true

- name: Configure Kubelet with specific node IP
  ansible.builtin.blockinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    block: |
      [Service]
      Environment="KUBELET_EXTRA_ARGS=--node-ip={{ master_ip }}"
    create: yes
    backup: yes
  notify:
    - Reload systemd
    - Restart kubelet